"""Add unique name constrants

Revision ID: 2911fee4324e
Revises: 3dad873f656a
Create Date: 2025-10-18 17:59:36.416343

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2911fee4324e'
down_revision: Union[str, Sequence[str], None] = '3dad873f656a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('uq_accumulator_name'), 'accumulator', ['name'])
    op.drop_constraint(op.f('fk_accumulator_device_id_device'), 'accumulator', type_='foreignkey')
    op.create_foreign_key(op.f('fk_accumulator_device_id_device'), 'accumulator', 'device', ['device_id'], ['id'], ondelete='SET NULL')
    op.create_unique_constraint(op.f('uq_device_name'), 'device', ['name'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_device_name'), 'device', type_='unique')
    op.drop_constraint(op.f('fk_accumulator_device_id_device'), 'accumulator', type_='foreignkey')
    op.create_foreign_key(op.f('fk_accumulator_device_id_device'), 'accumulator', 'device', ['device_id'], ['id'])
    op.drop_constraint(op.f('uq_accumulator_name'), 'accumulator', type_='unique')
    # ### end Alembic commands ###
